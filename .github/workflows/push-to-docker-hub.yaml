# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Docker image

on:
  push:
    branches:
      - 'master'
      - 'devel'
      - 'v*'
  pull_request:
    branches:
      - 'master'

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flavor: [full, minimum]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: yegle/fava
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' && matrix.flavor == 'full' }}
            type=raw,value=latest-minimum,enable=${{ github.ref == 'refs/heads/master' && matrix.flavor == 'minimum' }}

            # branch events
            type=ref,event=branch,suffix=${{ matrix.flavor == 'full' && '' || '-minimum' }}
            # PR events
            type=ref,event=pr,suffix=${{ matrix.flavor == 'full' && '' || '-minimum' }}
            # semver tags like v1.2.3 or v1.2.3-minimum
            type=semver,pattern={{version}},suffix=${{ matrix.flavor == 'full' && '' || '-minimum' }}
            type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.flavor == 'full' && '' || '-minimum' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_FLAVOR=${{ matrix.flavor }}
